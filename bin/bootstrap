#!/bin/bash

set -e

debug() {
    if [ "${DEBUG:-false}" = "true" ]; then
        # Use gdate if available (GNU coreutils on macOS), otherwise use standard date without milliseconds
        if command -v gdate &> /dev/null; then
            timestamp=$(gdate '+%H:%M:%S.%3N')
        else
            timestamp=$(date '+%H:%M:%S')
        fi
        echo "[$timestamp] $1"
    fi
}

brew_quiet() {
    if [ "${DEBUG:-false}" = "true" ]; then
        HOMEBREW_NO_AUTO_UPDATE=1 brew "$@"
    else
        HOMEBREW_NO_AUTO_UPDATE=1 brew "$@" >/dev/null 2>&1
    fi
}

bootstrap_homebrew() {
    if ! command -v brew &> /dev/null; then
        debug "Installing Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

        echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
        eval "$(/opt/homebrew/bin/brew shellenv)"
    else
        debug "Homebrew already installed"
    fi
}

bootstrap_mise() {
    if ! command -v mise &> /dev/null; then
        debug "Installing mise..."
        brew_quiet install mise
    else
        debug "mise already installed"
    fi

    eval "$(mise activate bash)"
}

bootstrap_gum() {
    if ! command -v gum &> /dev/null; then
        debug "Installing gum..."
        brew_quiet install gum
    else
        debug "gum already installed"
    fi
}

bootstrap_ruby() {
    # Resolve what ruby@latest actually means
    local latest_version
    latest_version=$(mise latest ruby)

    # Check if that specific version is already installed
    if command -v ruby &> /dev/null; then
        local current_version
        current_version=$(ruby -v | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)

        if [ "$current_version" = "$latest_version" ]; then
            debug "Ruby $current_version already installed (matches ruby@latest), skipping mise Ruby installation"
            return
        else
            debug "Ruby $current_version installed but ruby@latest is $latest_version"
        fi
    fi

    debug "Installing Ruby $latest_version via mise..."
    mise use --global ruby@latest >/dev/null
    mise install ruby@latest >/dev/null

    debug "Ruby bootstrap complete. Modern Ruby should now be available."
}

main() {
    debug "Bootstrapping development environment..."

    bootstrap_homebrew
    bootstrap_mise
    bootstrap_ruby
    bootstrap_gum

    debug "Bootstrap complete."
}

main "$@"
